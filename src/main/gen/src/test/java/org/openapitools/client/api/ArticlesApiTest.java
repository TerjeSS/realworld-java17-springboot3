/*
 * Conduit API
 * Conduit API documentation
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CreateArticle201Response;
import org.openapitools.client.model.CreateArticleRequest;
import org.openapitools.client.model.GenericErrorModel;
import org.openapitools.client.model.GetArticlesFeed200Response;
import org.openapitools.client.model.UpdateArticleRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ArticlesApi
 */
@Disabled
public class ArticlesApiTest {

    private final ArticlesApi api = new ArticlesApi();

    /**
     * Create an article
     *
     * Create an article. Auth is required
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createArticleTest() throws ApiException {
        CreateArticleRequest article = null;
        CreateArticle201Response response = api.createArticle(article);
        // TODO: test validations
    }

    /**
     * Delete an article
     *
     * Delete an article. Auth is required
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteArticleTest() throws ApiException {
        String slug = null;
        api.deleteArticle(slug);
        // TODO: test validations
    }

    /**
     * Get an article
     *
     * Get an article. Auth not required
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getArticleTest() throws ApiException {
        String slug = null;
        CreateArticle201Response response = api.getArticle(slug);
        // TODO: test validations
    }

    /**
     * Get recent articles globally
     *
     * Get most recent articles globally. Use query parameters to filter results. Auth is optional
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getArticlesTest() throws ApiException {
        String tag = null;
        String author = null;
        String favorited = null;
        Integer offset = null;
        Integer limit = null;
        GetArticlesFeed200Response response = api.getArticles(tag, author, favorited, offset, limit);
        // TODO: test validations
    }

    /**
     * Get recent articles from users you follow
     *
     * Get most recent articles from users you follow. Use query parameters to limit. Auth is required
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getArticlesFeedTest() throws ApiException {
        Integer offset = null;
        Integer limit = null;
        GetArticlesFeed200Response response = api.getArticlesFeed(offset, limit);
        // TODO: test validations
    }

    /**
     * Update an article
     *
     * Update an article. Auth is required
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateArticleTest() throws ApiException {
        String slug = null;
        UpdateArticleRequest article = null;
        CreateArticle201Response response = api.updateArticle(slug, article);
        // TODO: test validations
    }

}
